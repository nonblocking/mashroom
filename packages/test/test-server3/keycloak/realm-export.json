{
    "id": "test",
    "realm": "test",
    "notBefore": 1582896218,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "d81b0c0b-e544-40d3-9153-eadb942243af",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "test",
                "attributes": {}
            },
            {
                "id": "091645f6-9075-4b8d-b140-70547843f25a",
                "name": "mashroom-admin",
                "composite": false,
                "clientRole": false,
                "containerId": "test",
                "attributes": {}
            },
            {
                "id": "5a28b20e-d988-4531-a433-0348607cc0bf",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "test",
                "attributes": {}
            },
            {
                "id": "169c89fd-b785-422d-a483-c289350d2d88",
                "name": "default-roles-test",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": [
                        "offline_access",
                        "uma_authorization"
                    ],
                    "client": {
                        "account": [
                            "manage-account",
                            "view-profile"
                        ]
                    }
                },
                "clientRole": false,
                "containerId": "test",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "8b703d1f-3b85-4869-8231-90cb9cffce37",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-users",
                                "query-groups"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "547c7e4f-258a-4fdf-96cf-ca260f721007",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "b1f8b4b9-43dd-46b7-ad57-c917ad9878b5",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "a3e5f321-3506-4dae-acfb-4bf470e4ffe2",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "851f5b26-ddc8-4515-ab39-87420917c9cf",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "afcc585d-8080-4037-a613-1368f090634b",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "c8bdc61c-ab05-4897-9237-da1d83759666",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "ae24f369-79ef-48e5-9aee-43d3492991db",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "695fa60c-0e43-4711-95cd-82c44f78fbd9",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "7f5b6402-420c-45ec-968a-6c6967b90d0f",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "98338c24-a432-4df7-890d-a9d16d6e469a",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "e1010c60-43e5-48f2-9ec8-835ac2bdc08a",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "10b3f797-dbd0-4c9c-aac5-159fc0f90ffa",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "view-users",
                                "impersonation",
                                "manage-users",
                                "manage-authorization",
                                "manage-clients",
                                "manage-identity-providers",
                                "create-client",
                                "manage-realm",
                                "query-clients",
                                "view-clients",
                                "query-realms",
                                "query-users",
                                "view-authorization",
                                "view-identity-providers",
                                "view-realm",
                                "query-groups",
                                "manage-events",
                                "view-events"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "24776d7d-b664-45df-baeb-832bc8cd188e",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "7079166e-22a8-4fa7-ba5f-32555050aaa9",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "d7b7b07d-5330-40aa-9936-41f4f653f115",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "84157377-c4f5-4973-820b-03db637b5dc3",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "2cc1cb7a-f144-42ae-af8c-dc11ecba225c",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                },
                {
                    "id": "13f1577c-2e14-4f5a-8026-f186e0955fc1",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
                {
                    "id": "3f25ba30-5d86-4402-a723-5b6806c3cbd8",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b131972a-eb22-496a-8aaf-c846bc004bb7",
                    "attributes": {}
                }
            ],
            "mashroom": [
                {
                    "id": "f6991ba0-b388-4dde-adab-763600fb1bcc",
                    "name": "uma_protection",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "2741c846-ab4c-4181-8f65-cf866866219b",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "289a37bf-c571-4429-b020-f7d706b13f62",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                },
                {
                    "id": "2a35e638-e36c-4241-982f-063350881ba0",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "view-consent"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                },
                {
                    "id": "a135045e-df51-4b6f-9ba5-3cd663e2ba8b",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                },
                {
                    "id": "6c69813a-b224-4d34-9160-6971b3d52b8e",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                },
                {
                    "id": "67c60e86-bc61-43ca-8c3e-4f56b84c4acd",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "manage-account-links"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                },
                {
                    "id": "e718e98c-df1d-4a65-b4f6-53236589f6dc",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                },
                {
                    "id": "64da4554-df66-4945-b590-738507eb0019",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "169c89fd-b785-422d-a483-c289350d2d88",
        "name": "default-roles-test",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "test"
    },
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
        {
            "id": "6990b79b-8d9c-461f-8e05-7acc0496ff2e",
            "createdTimestamp": 1646472327377,
            "username": "admin",
            "enabled": true,
            "totp": false,
            "emailVerified": true,
            "firstName": "Admin",
            "lastName": "User",
            "email": "admin@test.com",
            "credentials": [
                {
                    "id": "f00b5dba-2006-4000-a9ed-ae00258121ea",
                    "type": "password",
                    "createdDate": 1646472341570,
                    "secretData": "{\"value\":\"f087orUx5ncT8zEXGjrNoiurhP2WhvDWRNJ1Ir3uFPNTSfnY9Kkml/6NQmDZyVGtTVJByeSKNzqY/zxphuPj8g==\",\"salt\":\"1A+zVjchPJThpAWwK8u22w==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
                }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "default-roles-test",
                "mashroom-admin"
            ],
            "notBefore": 0,
            "groups": []
        },
        {
            "id": "229b186e-818d-4508-aeb4-c3ea4f7235bb",
            "createdTimestamp": 1646472359374,
            "username": "john",
            "enabled": true,
            "totp": false,
            "emailVerified": true,
            "firstName": "John",
            "lastName": "Do",
            "email": "john@john.com",
            "credentials": [
                {
                    "id": "1a35f115-1b28-469c-8810-e83a3e51eaa8",
                    "type": "password",
                    "createdDate": 1646472368073,
                    "secretData": "{\"value\":\"4fdjwHK3JdPGYAvq/TVoK2PhNRyZGFdqLzI7fqjna3fSd+5bokV8wic32CJbU7ybqStxxw4FQC2SYlXm4gLRbw==\",\"salt\":\"2DrQXPzDQ8QN6LyVlJL+IA==\",\"additionalParameters\":{}}",
                    "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
                }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "default-roles-test"
            ],
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account"
                ]
            }
        ]
    },
    "clients": [
        {
            "id": "365a4cc7-5d70-449e-a47b-21ae4e8579a9",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/test/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
                "/realms/test/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "3c56808e-87ad-45b5-98c1-192668142de9",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/test/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/test/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "c7918ce8-8e43-47f8-897b-5dd53b2989e1",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "3e4a0c66-845d-4f0a-94d3-3f81dd2ce12b",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "b131972a-eb22-496a-8aaf-c846bc004bb7",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "2741c846-ab4c-4181-8f65-cf866866219b",
            "clientId": "mashroom",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "126654c2-229b-4c59-921d-fc55a7ba76c6",
            "redirectUris": [
                "http://localhost:5050/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "saml.assertion.signature": "false",
                "saml.force.post.binding": "false",
                "saml.multivalued.roles": "false",
                "saml.encrypt": "false",
                "saml.server.signature": "false",
                "saml.server.signature.keyinfo.ext": "false",
                "exclude.session.state.from.auth.response": "false",
                "saml_force_name_id_format": "false",
                "saml.client.signature": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "saml.authnstatement": "false",
                "display.on.consent.screen": "false",
                "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "74b8aeaf-4db1-4b81-9a86-7a0a23cb10c0",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "24fefea5-bfbd-471e-b930-3cfd84417e41",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientId",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientId",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "83359953-bb5e-4043-a6b6-1d54c8650f6d",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "148b8352-5ed6-4b55-95a3-6bfe960cf53d",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "roles",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "bcbd4dc8-b846-4350-aa56-2a90d08648ed",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "7e2b0707-3e94-4fd7-b889-c9c63ab5e2d0",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/test/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
                "/admin/test/console/*"
            ],
            "webOrigins": [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "1d3cabc0-ace4-48b8-ac14-a5eb0cf7ca4b",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes": [
        {
            "id": "6a4de43a-e143-4a24-9600-c17e26e13ee0",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "b9f91f66-4b04-4bbc-9c9f-12161b4defbd",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "54033f7f-792c-4791-9ba6-5525d7de935b",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "51a27632-9357-454f-ac4a-9395253fd102",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "c06dcb7d-ecf8-40f9-8dd9-fa365fad5095",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false",
                "consent.screen.text": ""
            },
            "protocolMappers": [
                {
                    "id": "a8768589-1239-4f2d-865d-09bb992b87fc",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "1ef2f983-03f7-4144-a974-18905d1faa06",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "14a7562f-aee1-473b-a332-b3d9fc2b5d6a",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "453a609c-de6a-4bb3-b40c-8978cfc453d5",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "eb661bdd-90e1-4521-b4e6-ba95d5c29fe9",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "8f47ed9d-408c-4713-93fc-f97ee721f719",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1a198eaa-b938-4fab-871f-3a3bc043f0bd",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "9ee9c7ac-d1a7-414c-98f7-3eb22751c677",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "762f22f2-bbd0-4c69-b266-6a42b3157939",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "ac641ea4-436a-4a94-98a2-e2d912c68cf3",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "208b0ec6-6fd2-48bd-b44b-f15567438e0d",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                },
                {
                    "id": "3ef7b45f-656f-4bd1-a021-832332bb260a",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "aa4967a5-c6a8-48d3-bbd6-53d9e553bed3",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "3f29189a-c4b9-4f12-8818-01d977644536",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "7ed73245-fcff-4810-9ff9-0a68ad355092",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "c88495d2-f8b8-486e-a789-43191267717a",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "096fcbe3-2f23-469f-9812-62d49fd04640",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "851bf1cb-1432-48f8-af7f-fbd1d204f6b7",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "92ed1203-8f2c-4d3e-aef7-693b0bfec56c",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5d20c104-82da-4556-81a0-f87e68a12cb9",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2312fff9-a087-4cdc-8532-cb1720ec833c",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "035d1b70-5f40-4240-afcc-a6ff4526125c",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5124ea26-904a-4186-a993-2a1c43175804",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "4829ae50-514f-4100-8432-b2815e0f20ba",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "dd80e78b-98f2-4eb0-8ef4-1a33559ee4b3",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "57470ea5-09ff-4299-b0f8-5738249bfe72",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "77b5abc5-8c2d-437f-bfe5-d522f5f96334",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "b2cc3456-c3d9-4a80-9877-458c23512e7f",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "9e97b01b-b8b3-4c7c-ad00-4c944b0f9446",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "43d5b4e0-5106-49ab-b71e-66d774c2d59e",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "email",
        "role_list",
        "roles",
        "web-origins",
        "profile"
    ],
    "defaultOptionalClientScopes": [
        "address",
        "offline_access",
        "microprofile-jwt",
        "phone"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "3a2a1580-6c1a-412a-8352-fc9f3b8f741b",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "4c537435-d608-412c-a4e6-620618973630",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "dac08b74-a321-4709-bd29-99040ad2bd34",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ]
                }
            },
            {
                "id": "88a1058f-77c6-482a-b0c3-1d88f035ce71",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "c0138478-11ab-4b3e-93d4-1131af68c7cf",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "saml-role-list-mapper",
                        "oidc-full-name-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-address-mapper",
                        "saml-user-property-mapper"
                    ]
                }
            },
            {
                "id": "213eee59-f723-4bff-bcfd-78def50e9a65",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": [
                        "200"
                    ]
                }
            },
            {
                "id": "0ef2014e-c016-4a4b-87f5-db6bf410b1d9",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-property-mapper",
                        "saml-user-property-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-address-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-full-name-mapper",
                        "saml-user-attribute-mapper",
                        "saml-role-list-mapper"
                    ]
                }
            },
            {
                "id": "545ef0da-60be-4ee0-b9ff-e27833bc01da",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "b6a224f1-df96-42cb-96d0-2c8c6d4214f9",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "dfb43be0-7bcf-4882-aeba-9493b21b05ed"
                    ],
                    "secret": [
                        "lFKyQC9z99sU91sHM1u_GpyTDWUEHE0iTkHjXflj3DJlZxhztQJqqEGxhhCG8QVyUF_WofI-_Mff6k28cMEzAA"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS256"
                    ]
                }
            },
            {
                "id": "c98ebcbf-075b-4297-81c7-884df17b5d2f",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "a84d2c91-7c67-4e52-8218-1148b1f99260"
                    ],
                    "secret": [
                        "ZKQv1PGtP3lX3FO4_qeC_w"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "0fec1d92-c138-4dc9-a891-ea203b54d063",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAyHEBf4MtfPWvktLG5BUH9XfC7VeOuncd9m61ZO5EpY4dhlxR7A8HmOGqqPTgyRaf6QaG2h00zkVzNu8yspSBjf5OmPjUmbI+dR03/iwRRFUe1AmKrHS0/oe0Ipu+LyMMkUgAVIzYz8wReOWl/ppHWQxTF04d1hMj64MLR93WUJTnVOM2xljSA5U7yOLGjiaNtH/cCGZMCofEB8qBQo+BrsgeqPJ3TUYED+/bae69upinrCgaV3WHCmj4ExPYXm5TnIdxdTTK3b00aJEbX5r2fJbh7u4pf2/TXcN1QnVeHbNQliK9yT7TJ7XzZDt5Ac5R9y/sPxQ+zxGJgeEbVNPjBwIDAQABAoIBACSu2dFWVoraA+ng/Vlcp/o6ksgRECP8DNW+6R+xo4qQ+cJPPwbusTs/gZYuSr1CkL163k8orTNa7n0NRb/9AcDU29mPIImIX3nbgRXZRse0tFGl9WUebsluWH9E9Yd26KPmA3l11XAiLshrbverkIcxhDttpnQ5SIefkf7zEHfqlQaibiObi3b1S+So/TGAVo76c972qxzV8r2YAlFOBdr0+lt/b9SuBvh1FQfvGHKJaqKg+116H7zK4I9Qve5lK46wznC9djt9lQwa4xAkbR0nySGj831g1JUNWqwYQBQGzc3arMsEVrRKCoUiEkFvOt+ZfH/+wDaPcioAse4ob9ECgYEA/SHxwaNRIzm8nRNTIB2hgdimF6cwVgZVYjhB7ra2mk3qAsXj+HSKslbpzNHeOOpZeIErYj+ApE4NIQjcwCGY0h6/J520E8IE2zTYMsfuBc4a1u1WUHGcR0GSUWQghvFvohxPDXWX4pBh3F9dcBrN63rJEEtMjk5PA8h+h5s2NQsCgYEAyrZDW/4ngVCjf3ZoH8qEGxztpD+EuABVDcSL8lpSaW2HNfWLgBUCnZyXolDF2W3PqHx8nM5flG0ozIjXvuj4o5oelFeRpEM14eVOSqrlY7wVM5J0Ai1H1I3fGYHOilQdvErx+8NXrJNioRb0VLoP47cBN4d0L/D+cNyKqZsWD3UCgYEAiA/l3hrGMzQGsTvA88NZm+zzIkWo0qSm4puwvPqTXo/A2Gq8ZkFmiAP1ujWYyGkXXJG52x6dLDQUFIyp89BbT55dS5MWR4SDjbxy9aDHzXECtkJuoeDfiuGxH3S9kytVwQKMb4Sk9pB7ObQ9ClQuGYQvbUW8ScXH7RWpBYUldw8CgYBQYIjA9zuu2Mybg9WxlVlgbs4DrHPxiaAv/1kGVa4Lw7QzPxN7S9lnqWmuoJxypEoMop++hU38ynO89h2lwzajmD67zyUens/ErGmoza57J164vj9lhZLPwxlNQd0lmEjaGlVs4H3pHd+jxDhJSCV4w12mKP127PXWxnvs2GOc6QKBgF/FMZJyDbjf2WVhOmCcA/7A6vgkyM69Xy0gi5cXU1F+eJKIhQzZPdXQO+IzS2/4j4oLupuDzDwlCWcA/lciHKkD2+34xv3I4zyULnjxUGkuQhco+wv1M4KP9iVeQ25q+3UG8Z/C6+zJJx7YtYWrHIZgShLf2QFS124CT9Z+FyzG"
                    ],
                    "certificate": [
                        "MIIClzCCAX8CBgF/WWHy7jANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIyMDMwNTA5MTkyNVoXDTMyMDMwNTA5MjEwNVowDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMhxAX+DLXz1r5LSxuQVB/V3wu1Xjrp3HfZutWTuRKWOHYZcUewPB5jhqqj04MkWn+kGhtodNM5FczbvMrKUgY3+Tpj41JmyPnUdN/4sEURVHtQJiqx0tP6HtCKbvi8jDJFIAFSM2M/MEXjlpf6aR1kMUxdOHdYTI+uDC0fd1lCU51TjNsZY0gOVO8jixo4mjbR/3AhmTAqHxAfKgUKPga7IHqjyd01GBA/v22nuvbqYp6woGld1hwpo+BMT2F5uU5yHcXU0yt29NGiRG1+a9nyW4e7uKX9v013DdUJ1Xh2zUJYivck+0ye182Q7eQHOUfcv7D8UPs8RiYHhG1TT4wcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAvrN6sO9DBIW/C3YTZrl0p9b8wQSE2BwWP0Y6QP1VBvPk8eS41qq9yVPouUzFfYKEGF1YphjZQdhCg3DlE3jSEOaIQvTBPgmpcMZS3Qqjv8yufNjJ6/Qccy9L+RXvETA8Xa8SH1VgJzWIaYTZlLhyu005ex+1DBX9NvyfpgnQBYyN/PVWhnKFQ+IdDHptmfgA9rGftcPEXmlxMtadHL6U71tFvykrbX2j0FpH6sxczOx57pn4tHH6fmLaUMiME0i2VCWJhxfu323IwPt8B19lWTpoDgul8RLlP1WMCVLk8fP/bYQPn/br7QGa6Xb/OQtyuSrJpCubNIqC+kne9Ww+dg=="
                    ],
                    "priority": [
                        "100"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
        {
            "id": "793b308f-adff-4a49-8236-a1c1262afb78",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "Handle Existing Account - Alternatives - 0",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "5ab7a70e-2f87-479e-9c86-4e6bd832b530",
            "alias": "Handle Existing Account - Alternatives - 0",
            "description": "Subflow of Handle Existing Account with alternative executions",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "ffc62457-c6d7-4bf9-9459-58d88b6da198",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "flowAlias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "df194c22-35e5-4f7c-b555-e8befdbcaea1",
            "alias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
            "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "50351c11-8e63-45ba-99d6-0a051530e510",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "flowAlias": "forms",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "dfe0958d-8540-4cb9-a7d0-63b1496b78b4",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "50193838-e342-493a-a028-e30ed5781746",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "flowAlias": "direct grant - direct-grant-validate-otp - Conditional",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "a60e3d82-cf19-45ad-bfb4-42815397a8dd",
            "alias": "direct grant - direct-grant-validate-otp - Conditional",
            "description": "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "e577d9be-3359-4817-91bc-b9a78a40e056",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "19a77a92-c018-45b9-a8a6-46eeec5ecc50",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "first broker login - Alternatives - 0",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "ae20bb0a-a89d-42b5-b975-5f3c694a7a48",
            "alias": "first broker login - Alternatives - 0",
            "description": "Subflow of first broker login with alternative executions",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "b65f3e24-a0ac-4c27-9c87-39af2f33daae",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "flowAlias": "forms - auth-otp-form - Conditional",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "400722cd-9ff9-4f34-9580-4e8f2b90c9af",
            "alias": "forms - auth-otp-form - Conditional",
            "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "351e079a-fb0a-4e24-989d-624919e89392",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "basic-auth",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "07e929c0-078c-41fb-bde7-d67cb9395d92",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "36074c55-1897-4505-8e8a-8fce204383a5",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "943a48c3-c31e-4908-894b-f8bc60189241",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "flowAlias": "reset credentials - reset-otp - Conditional",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "0b57f4e3-874f-45ae-91ad-8f98ec8fd19a",
            "alias": "reset credentials - reset-otp - Conditional",
            "description": "Flow to determine if the reset-otp authenticator should be used or not.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "d3d326e9-b8dc-4176-b673-37c348e775c3",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "0d440a4b-48f2-421a-90b0-af8c257f673d",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "120951be-75b9-4ab7-90ee-22625b67c262",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "clientSessionMaxLifespan": "0",
        "parRequestUriLifespan": "60",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5"
    },
    "keycloakVersion": "15.0.2",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}
